package day1201;

public class CountSycDemo  extends Thread{

	private PersonSyc personSyc;
	private static Object object =new Object();
	public CountSycDemo(PersonSyc person) {
		personSyc =person;
	}
	public static void main(String[] args) {
		for (int i = 0; i < 1000; i++) {
			PersonSyc person  =new PersonSyc();
			person.setName("王"+i);
			CountSycDemo crush =new CountSycDemo(person);
		 crush.start();
		}
	}
	
	public void getWater (PersonSyc person) {
		synchronized (object) {
		 System.out.println(person.getName()+"开始打水:");
		 try {
			Thread.currentThread().sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 System.out.println(person.getName()+"开始结束！");
		 
		}
		
	}
	
		@Override
		public void run() {
			this.getWater(personSyc);
		}	
		}
	


package day1201;

public class MetuxCountDemo {

	
	public static void main(String[] args) {
		int times=10;
		for (int i = 0; i < times; i++) {
			MetuxThread thread =new MetuxThread();
			thread.start();
		}
	}
}
 class MetuxThread extends Thread{
	  private static int count =0;
	  private static boolean flag=true;
	  
	  public synchronized void run(){
		  if(!flag) {
			  try {
			 wait();
			 
			  }catch (InterruptedException e) {
				// TODO: handle exception
			}
		  }
		  flag =false;
		  count++;
		  flag=true;
		  notifyAll();
		  System.out.println(getName()+"count="+count);
		  try {
			sleep(1000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	  }
 }
 package day1201;

public class PersonSyc {

	public void setName(String string) {
		// TODO Auto-generated method stub
		
	}

	public String getName() {
		// TODO Auto-generated method stub
		return null;
	}

}
